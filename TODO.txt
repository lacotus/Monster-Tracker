==========
== TODO ==
==========

6.  Add weapons scrollbar to MonsterInstance (formally called Monster object)

31. Solve glitch where weapons array does not save when switching back from page 1

35. Page1 data binding - working, need to figure out how weapon arrays will be
handled

36. Page1 save data

37. Page2 save data

48. Update BattlePage CSS to be percentage based

51. Add CR, XP and speed to MonsterInstance

56. Build addBattle function in BattleLists.vue

57. Fix battles not loading into BattleLists * see note 1

===============
== Completed ==
===============
1.  Setup top bar (MainHeader.vue) - done
4.  Set Monster object width / height - done
3.  Start work on Monster object - done
2.  Research FlexBox - done
7.  Add general information section - done
5.  Add top row in Monster object
13. Research libraray for sibling communication (likely landing on Pinia) - done
14. Install / setup pinia - done
12. Create MonsterInstnace title component - done 
9.  Condense CSS classes - done
10. Create MonsterInstance page 1 component - done
11. Create MonsterInstance page 2 component - done
12. Change INT TextBox to behind the border of MonsterInstance - done
8.  Add cog logo to MonsterInstance settings button - done
16. Move html from TitleBar.vue to MonsterInstance.vue - done
17. Adjust MonsterInstance JS - done
18. Adjust MonsterInstance CSS - done
19. Add functionality to switch between pages in MonsterInstance - done
21. Clean up Page1.vue HTML - done
20. Fix Page1.vue CSS - done
22. Fix intInput border issue - done
23. Adjust CSS for labels in weapons section of page1 - done
15. Create plus button for weapon scrollbar - done
24. Bug: intInput background glitch - resolved: moved z-index modifaction out
of intInput, put a style tag in to adjust border radius
25. Create weapon component - done
27. Add TitleBar into page 2 - done
26. Add functionality to add weapon into page1 - done
30. Correct spacing of weapon components - done
29. Add Special Abilities to page 2 - done
29. Add Special Abilities to page 2 - done
32. Fix spacing of labels in col1 in page2 - done
33. Fix spacing of input in col2 in page2 - done
28. Add Ability Scores to page 2 - done
36. Page2 data biding - done
34. Bug: Not switching back to page1 from page2 - resolved by removing code in
    mounted() part of page2
39. Code frontend of sign in page component - done
45. Add switch to main content page when login function is ran - done
47. Combine MainHeader and MonsterArea into one component - done
44. Add dynamic component to App.vue - done
46. Create CreateUser.vue component - done
43. Write login function bones - done
52. Add CR, XP and speed to monsters table in db - done
53. Input validation for SignInPage - done
50. Add input validation to SignInPage - done
54. Build html and css for BattleItem - done
55. Build out JS for BattleItem - done
57. Add frontend routing - done
49. Fix password match css border issue - done
42. Fix json object returned in SignInPage, change strUsername to username -
    done
38. Create sign in page component - done
40. Query for existing users - done
41. Fix link css in Sign in page component - done

===========
== Notes ==
===========
Note 1: Issue is related to params not being passed when the new router is
	loaded. I am pretty sure that the code for passing the data is
	correct, but the params are blank in the this.$route object on the
	child component. I believe it has something to do with
	asynchronization, a concept with which I am not too familiar.

